  version: '3.9'
  services:
    database:
      image: postgres
      ports:
        - 5432:5432
      restart: always
      environment:
        POSTGRES_USER: docker
        POSTGRES_PASSWORD: docker
        POSTGRES_DB: exampledb
      volumes:
        - ./app/db/data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "docker"]
        interval: 30s
        timeout: 10s
        retries: 5

    adminer:
      image: adminer
      restart: always
      depends_on:
        database:
          condition: service_healthy
      ports:
        - 8081:8080

    minio:
      image: quay.io/minio/minio
      container_name: minio
      ports:
        - 9000:9000
        - 9001:9001
      volumes:
        - ./app/minio/data:/data
      environment:
        - MINIO_ROOT_USER=ROOTNAME
        - MINIO_ROOT_PASSWORD=PASSWORD
      restart: always
      command: server --console-address ":9001" /data
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 10s
        retries: 5

    frontend:
      build: ./app/frontend
      ports:
        - "3000:3000"
      stdin_open: true
      tty: true
      depends_on:
        - backend
        - jupyter
    jupyter:
      build: ./app/jupyter
      ports:
        - "8888:8888"
      depends_on:
        minio:
          condition: service_healthy
      volumes:
        - ./app/backend/files:/home/jovyan/work
      command: >
        bash -c "
        mc alias set myminio http://minio:9000 ROOTNAME PASSWORD &&
        mc mirror myminio/scientificdata /home/jovyan/work &&
        jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --NotebookApp.token='' --NotebookApp.password=''
        "

    backend:
      build: ./app/backend
      ports:
        - 8000:80
      volumes:
        - ./app/backend/files:/files
      depends_on:
        database:
          condition: service_healthy
        minio:
          condition: service_healthy
 

